(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{460:function(t,i,n){"use strict";n.r(i);var s=n(2),r=Object(s.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul")]),t("p"),this._v(" "),t("p",[this._v("SpringApplicationRunListener,顾名思义，该类是监听SpringApplication的run方法执行时各个阶段的事件。具体事件这里不做详述，有兴趣的可以看SpringApplicationRunListener的各个方法定义。这里主要提出以下SpringBoot加载SpringApplicationRunListener的方式。")]),this._v(" "),t("p",[this._v("SpringBoot的加载主要是通过SpringFactoriesLoader实现，该类提供了一些工具方法。大致过程是遍历class路径下的META-INF/spring.factories文件，加载文件中配置的类。")]),this._v(" "),t("p",[this._v("在开发过程中我们也可以在resources文件夹下创建META-INF/spring.factories文件,并配置自己想加载的对应类。")])])}),[],!1,null,null,null);i.default=r.exports}}]);